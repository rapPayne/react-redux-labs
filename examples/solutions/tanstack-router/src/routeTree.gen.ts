/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as CheckoutRouteImport } from './routes/Checkout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PickseatsShowingIdRouteImport } from './routes/pickseats/$showingId'
import { Route as FilmIdRouteImport } from './routes/film/$id'
import { Route as AuthenticationLogoutRouteImport } from './routes/authentication/Logout'
import { Route as AuthenticationLoginRouteImport } from './routes/authentication/Login'

const CheckoutRoute = CheckoutRouteImport.update({
  id: '/Checkout',
  path: '/Checkout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PickseatsShowingIdRoute = PickseatsShowingIdRouteImport.update({
  id: '/pickseats/$showingId',
  path: '/pickseats/$showingId',
  getParentRoute: () => rootRouteImport,
} as any)
const FilmIdRoute = FilmIdRouteImport.update({
  id: '/film/$id',
  path: '/film/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticationLogoutRoute = AuthenticationLogoutRouteImport.update({
  id: '/authentication/Logout',
  path: '/authentication/Logout',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticationLoginRoute = AuthenticationLoginRouteImport.update({
  id: '/authentication/Login',
  path: '/authentication/Login',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/Checkout': typeof CheckoutRoute
  '/authentication/Login': typeof AuthenticationLoginRoute
  '/authentication/Logout': typeof AuthenticationLogoutRoute
  '/film/$id': typeof FilmIdRoute
  '/pickseats/$showingId': typeof PickseatsShowingIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/Checkout': typeof CheckoutRoute
  '/authentication/Login': typeof AuthenticationLoginRoute
  '/authentication/Logout': typeof AuthenticationLogoutRoute
  '/film/$id': typeof FilmIdRoute
  '/pickseats/$showingId': typeof PickseatsShowingIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/Checkout': typeof CheckoutRoute
  '/authentication/Login': typeof AuthenticationLoginRoute
  '/authentication/Logout': typeof AuthenticationLogoutRoute
  '/film/$id': typeof FilmIdRoute
  '/pickseats/$showingId': typeof PickseatsShowingIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/Checkout'
    | '/authentication/Login'
    | '/authentication/Logout'
    | '/film/$id'
    | '/pickseats/$showingId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/Checkout'
    | '/authentication/Login'
    | '/authentication/Logout'
    | '/film/$id'
    | '/pickseats/$showingId'
  id:
    | '__root__'
    | '/'
    | '/Checkout'
    | '/authentication/Login'
    | '/authentication/Logout'
    | '/film/$id'
    | '/pickseats/$showingId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CheckoutRoute: typeof CheckoutRoute
  AuthenticationLoginRoute: typeof AuthenticationLoginRoute
  AuthenticationLogoutRoute: typeof AuthenticationLogoutRoute
  FilmIdRoute: typeof FilmIdRoute
  PickseatsShowingIdRoute: typeof PickseatsShowingIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/Checkout': {
      id: '/Checkout'
      path: '/Checkout'
      fullPath: '/Checkout'
      preLoaderRoute: typeof CheckoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pickseats/$showingId': {
      id: '/pickseats/$showingId'
      path: '/pickseats/$showingId'
      fullPath: '/pickseats/$showingId'
      preLoaderRoute: typeof PickseatsShowingIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/film/$id': {
      id: '/film/$id'
      path: '/film/$id'
      fullPath: '/film/$id'
      preLoaderRoute: typeof FilmIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/authentication/Logout': {
      id: '/authentication/Logout'
      path: '/authentication/Logout'
      fullPath: '/authentication/Logout'
      preLoaderRoute: typeof AuthenticationLogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/authentication/Login': {
      id: '/authentication/Login'
      path: '/authentication/Login'
      fullPath: '/authentication/Login'
      preLoaderRoute: typeof AuthenticationLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CheckoutRoute: CheckoutRoute,
  AuthenticationLoginRoute: AuthenticationLoginRoute,
  AuthenticationLogoutRoute: AuthenticationLogoutRoute,
  FilmIdRoute: FilmIdRoute,
  PickseatsShowingIdRoute: PickseatsShowingIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
